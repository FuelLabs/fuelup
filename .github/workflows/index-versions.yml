name: Check Versions

on:
  push
  # schedule:
    # Run at minute 0 and 30 every hour
    # - cron: '0,30 * * * *'
env:
  LATEST_CHANNEL_DIR: ./channel-fuel-latest.toml.d/

jobs:
  compare-versions:
    name: Check versions
    runs-on: ubuntu-latest
    outputs:
      version-matrix: ${{ steps.set-version-matrix.outputs.version-matrix }}
    steps:
      - name: checkout master
        uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Checkout fuelup gh-pages
        uses: actions/checkout@v3
        with:
          repository: fuellabs/fuelup
          path: gh-pages
          ref: gh-pages

      - uses: Swatinem/rust-cache@v1
      - name: Install compare-versions script
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: --debug --path ./scripts/compare-versions
      - name: Compare versions and set variables for tests if needed
        id: set-version-matrix
        run: |
          compare-versions >> out

          if [ -s out ]; then
            VERSIONS=''
            while read line
            do
              if [ -d gh-pages/incompatible-versions ] && [ -e gh-pages/incompatible-versions/$line ]; then
                # If an incompatible set is already published onto gh-pages, we do not add it to the matrix input for testing.
                echo "incompatible versions: $line"
              else
                if [ -n "$VERSIONS" ]; then
                  VERSIONS+=','
                fi

                # Next 4 lines is simply splitting the lines received from compare-versions into a JSON object.
                # example line: forc-0.17.0@fuel-core-0.9.4
                # result:
                # {"forc-version":"0.17.0","fuel-core-version":"0.9.4"}
                FORC_VERSION="$(echo $line | cut -d '@' -f1 | cut -d '-' -f2-)"
                FUEL_CORE_VERSION="$(echo $line | cut -d '@' -f2- | cut -d '-' -f3-)"
                JSON_FMT='{"forc-version":"%s","fuel-core-version":"%s"}'
                VERSIONS+=$(printf "$JSON_FMT" "$FORC_VERSION" "$FUEL_CORE_VERSION")
              fi
            done < "./out"

            echo "Testing with versions: $VERSIONS"

            echo "::set-output name=version-matrix::{\"job\":[$VERSIONS]}"
          else
            echo -e "\nNo new and untested versions; exiting"
          fi

  test-compatibility:
    name: Test compatibility
    needs: compare-versions
    if: ${{ needs.compare-versions.outputs.version-matrix != '{\"job\":[]}' }}
    uses: ./.github/workflows/test-toolchain-compatibility.yml
    with:
      version-matrix: ${{ needs.compare-versions.outputs.version-matrix }}
